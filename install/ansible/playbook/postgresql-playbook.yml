---
- name: Install Postgresql
  hosts: sonarqube
  become: true
  
  vars_files:
  - vars/sonar_db_credentials.yml

  tasks:
  - name: Update package cache
    ansible.builtin.apt:
      update_cache: yes

  - name: Install curl ca-certificates
    ansible.builtin.apt:
      name: [ "curl", "ca-certificates", "acl"]
      state: present

  - name: Create /usr/share/postgresql-common/pgdg if it does not exist
    ansible.builtin.file:
      path: /usr/share/postgresql-common/pgdg
      state: directory
      mode: '0755'

  - name: Add postgresql Apt signing key to a specific keyring file
    ansible.builtin.get_url:
      url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
      dest: /usr/share/postgresql-common/pgdg/apt.postgresql.org.asc
      mode: '0644'

  - name: Add postgresql repository into sources list
    ansible.builtin.apt_repository:
      repo: deb [signed-by=/usr/share/postgresql-common/pgdg/apt.postgresql.org.asc] https://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main
      state: present

  - name: Update package cache
    ansible.builtin.apt:
      update_cache: yes

  - name: Install Postgresql
    ansible.builtin.apt:
      name: postgresql
      state: present

  - name: enable and start postgresql
    ansible.builtin.service:
      name: postgresql
      enabled: true
      state: started

  - name: Utility present
    ansible.builtin.package:
      name: python3-psycopg2
      state: present

  - name: Create a user sonar
    community.postgresql.postgresql_user:
      name: "{{ db_user }}"
      password: "{{ db_password }}"
      encrypted: yes
    become: yes
    become_user: postgres

  - name: Create a new database with name "sonarqube"
    community.postgresql.postgresql_db:
      name: "{{ db_name }}"
      owner: "{{ db_user }}"
      encoding: UTF8
    become: yes
    become_user: postgres

  - name: GRANT ALL PRIVILEGES ON DATABASE sonarqube TO sonar
    community.postgresql.postgresql_privs:
      database: "{{ db_name }}"
      privs: "ALL"
      type: database
      role: "{{ db_user }}"
    become: yes
    become_user: postgres

